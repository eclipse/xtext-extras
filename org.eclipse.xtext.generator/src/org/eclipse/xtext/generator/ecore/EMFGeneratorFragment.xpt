«REM»
/*******************************************************************************
 * Copyright (c) 2008 itemis AG (http://www.itemis.eu) and others.
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 *******************************************************************************/
«ENDREM»

«IMPORT org::eclipse::xtext»

«EXTENSION org::eclipse::xtext::generator::Naming»
«EXTENSION org::eclipse::xtext::GrammarUtil»

«DEFINE generate(String basePackage) FOR Grammar»
«ENDDEFINE»

«DEFINE addToPluginXmlRt(String basePackage, String genmodelPath) FOR Grammar-»
«IF !metamodelDeclarations.typeSelect(GeneratedMetamodel).isEmpty»
  <extension point="org.eclipse.emf.ecore.generated_package">
  «FOREACH metamodelDeclarations.typeSelect(GeneratedMetamodel) AS p-»
    <package 
       uri = "«p.EPackage.nsURI»" 
       class = "«basePackage».«p.name».«p.name.toFirstUpper()»Package"
       genModel = "«genmodelPath»" /> 
	«ENDFOREACH»
  </extension>
«ENDIF»
«ENDDEFINE»


«DEFINE addToPluginXmlUi(String basePackage) FOR Grammar-»
«ENDDEFINE»

«DEFINE addToStandaloneSetup(String basePackage) FOR Grammar-»
	«FOREACH metamodelDeclarations.typeSelect(GeneratedMetamodel) AS mmd-»
	if (!EPackage.Registry.INSTANCE.containsKey("«mmd.EPackage.nsURI»")) {
		EPackage.Registry.INSTANCE.put("«mmd.EPackage.nsURI»", «basePackage».«mmd.name».«mmd.name.toFirstUpper()»Package.eINSTANCE);
	}
	«ENDFOREACH-»
«ENDDEFINE»


