<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.xtext</groupId>
		<artifactId>xtext-extras</artifactId>
		<version>2.30.0-SNAPSHOT</version>
	</parent>
	<artifactId>org.eclipse.xtext.common.types.tests</artifactId>
	<packaging>jar</packaging>

	<name>Common Types Runtime Library Tests</name>
	<description>JVM type model used by Xbase and other languages.</description>

	<!--
	This should be a pure Maven project (packaging "jar", not "eclipse-plugin",
	so that it behaves as in Eclipse and classpaths and classloaders work
	correctly.
	-->

	<dependencies>
		<!--
		TODO: update it
		This should be in the same Git repository of this one
		-->
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.testing</artifactId>
			<version>${xtext-current-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xtext.generator</artifactId>
			<version>${xtext-current-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.common.types</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.xtext</groupId>
			<artifactId>org.eclipse.xtext.xbase.testdata</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.mwe2.language</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.equinox.common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.platform</groupId>
			<artifactId>org.eclipse.core.runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.compiler.apt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt</groupId>
			<artifactId>org.eclipse.jdt.compiler.tool</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.errorprone</groupId>
			<artifactId>error_prone_annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-sources</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src</source>
								<source>src-gen</source>
								<source>testdata</source>
								<source>tests</source>
								<source>longrunning/src</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<!-- Tests need files like
							/org.eclipse.xtext.common.types.tests/tests/org/eclipse/xtext/common/types/testSetups/testData.jar
							and to Xtext files like .xtextbin
							to be on the classpath; but they are not automatically copied in the target
							folder by default by the maven-compiler-plugin:
							we must specify them as resources so that maven-resources-plugin will copy them.
							Otherwise, there will be failure errors, e.g., in JarReflectionTypeProviderTest
							of the shape:
							"1) [Guice/ErrorInjectingConstructor]:
							WrappedException: ClasspathUriResolutionException:
							FileNotFoundOnClasspathException:
							Couldn't find resource on classpath.
							URI was 'classpath:/org/eclipse/xtext/common/types/xtext/ui/RefactoringTestLanguage.xmi'" -->
						<id>add-test-resources</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src-gen</directory>
								</resource>
								<resource>
									<directory>tests</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
