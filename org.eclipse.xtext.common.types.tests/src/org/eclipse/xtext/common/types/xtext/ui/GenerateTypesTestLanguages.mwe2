/*******************************************************************************
 * Copyright (c) 2010 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
module org.eclipse.xtext.common.types.xtext.ui.GenerateTypesTestLanguages

import org.eclipse.emf.mwe2.runtime.workflow.Workflow
import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*
import org.eclipse.xtext.ui.tests.*
import de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
import de.itemis.xtext.antlr.XtextAntlrUiGeneratorFragment

var projectName = "org.eclipse.xtext.common.types.tests"
var runtimeProject = "../${projectName}"
var lineDelimiter = '\n'

Workflow {
	bean = StandaloneSetup {
		ignoreBrokenProjectFiles = true
		platformUri = "${runtimeProject}/.."
		registerGenModelFile = "platform:/resource/org.eclipse.xtext.common.types/model/JavaVMTypes.genmodel"
	} 
	
	component = DirectoryCleaner {
		directory="${runtimeProject}/src-gen"
	} 
	
	component = Generator auto-inject {
		pathRtProject = "${runtimeProject}"
		pathTestProject = "${runtimeProject}"
		projectNameRt = "${projectName}"
		activator = "org.eclipse.xtext.common.types.tests.AbstractActivator"
		mergeManifest = false
		
		language = { 
			
			uri="classpath:/org/eclipse/xtext/common/types/xtext/ui/ContentAssistTestLanguage.xtext"
			fileExtensions = "typesAssistTest"
			fragment = @CommonTestLanguagesFragments {
				file.extensions = "typesAssistTest"
			}
            fragment = generator.GeneratorFragment {
            	generatorStub = false
            }
		}
		language = {
			uri="classpath:/org/eclipse/xtext/common/types/xtext/ui/RefactoringTestLanguage.xtext"
			fileExtensions = "typesRefactoring"
			fragment = @CommonTestLanguagesFragments {
				file.extensions = "typesRefactoring"	
			} 
			fragment = junit.Junit4Fragment {}
		}
		language = {
			uri="classpath:/org/eclipse/xtext/common/types/xtext/ui/RefactoringTestLanguage1.xtext"
			fileExtensions = "typesRefactoring1"
			fragment = @CommonTestLanguagesFragments {
				file.extensions = "typesRefactoring1"	
			} 
			fragment = refactoring.RefactorElementNameFragment {
			}	
		}
		language = {
			uri="classpath:/org/eclipse/xtext/common/types/xtext/ui/RefactoringTestLanguage2.xtext"
			fileExtensions = "typesRefactoring2"
			fragment = @CommonTestLanguagesFragments {
				file.extensions = "typesRefactoring2"	
			} 
			fragment = refactoring.RefactorElementNameFragment {
				useJdtRefactoring = true
			}	
		}
	}
}